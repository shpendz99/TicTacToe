import Head from 'next/head'
import { useEffect, useState } from "react";


export default function Home() {
  const WINNING_COMBO = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6],
  ];

  const [xTurn, setXTurn] = useState(true);
  const [won, setWon] = useState(false);
  const [wonCombo, setWonCombo] = useState([]);
  const [boardData, setBoardData] = useState({
    0: "",
    1: "",
    2: "",
    3: "",
    4: "",
    5: "",
    6: "",
    7: "",
    8: "",
  });
  const [isDraw, setIsDraw] = useState(false);
  useEffect(() => {
    checkWinner();
    checkDraw();
  }, [boardData]);
  const updateBoardData = (idx) => {
    if (!boardData[idx] && !won) {
      //will check whether specify idx is empty or not
      let value = xTurn === true ? "X" : "O";
      setBoardData({ ...boardData, [idx]: value });
      setXTurn(!xTurn);
    }
  };
  const checkDraw = () => {
    let check = Object.keys(boardData).every((v) => boardData[v]);
    setIsDraw(check); 
  };
  const checkWinner = () => {
    WINNING_COMBO.map((bd) => {
      const [a, b, c] = bd;
      if (
        boardData[a] &&
        boardData[a] === boardData[b] &&
        boardData[a] === boardData[c]
      ) {
        setWon(true);
        setWonCombo([a, b, c]);
        return;
      }
    });
  };

  const reset = () => {
    setBoardData({
      0: "",
      1: "",
      2: "",
      3: "",
      4: "",
      5: "",
      6: "",
      7: "",
      8: "",
    });
    setXTurn(true);
    setWon(false);
    setWonCombo([]);
    setIsDraw(false);
    
  };
  

  return (
    <div >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='w-full h-screen bg-slate-800'>
        <div className='w-full h-screen flex flex-col justify-center items-center '>
          <div className='flex-column text-center mb-20'>
            <h1 className='text-5xl font-semibold text-[#f8bb2e] mb-4'>Tic Tac Toe</h1>
            {won ? (
              <p className='text-2xl text-slate-100 hover:scale-110 transition duration-200 ease-out'>{xTurn === false ? "Player X Won" : "Player O Won"} </p>
            ) : (
              <p className='text-2xl text-slate-100 '>It is Player {xTurn === true ? "X's Turn" : "O's Turn"}</p>
            )} 
          </div>
          <div className='grid grid-cols-3 gap-4'>
          {[...Array(9)].map((v, idx) => {
            return (
              <div
                onClick={() => {
                  updateBoardData(idx);
                }}
                key={idx}
                className={`w-[100px] h-[100px] pt-7 text-center justify-center font-bold text-3xl rounded-xl cursor-pointer bg-blue-200 hover:bg-blue-400 ${
                  wonCombo.includes(idx) ? "bg-[#56e439]" : ""
                }`}
              >
                {boardData[idx]}
              </div>
            );
           })}
          </div>
          <p className='text-2xl text-slate-100 '></p>
          <button onClick={reset} className=' bg-[#f8bb2e] px-[20px] py-[10px] my-5 mb-10 rounded-md text-lg font-semibold cursor-pointer hover:scale-105  transition duration-150 ease-out'>Restart</button>
        
        
        
        </div>
      </main>

      
    </div>
  )
}

